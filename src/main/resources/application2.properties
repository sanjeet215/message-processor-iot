spring.application.name=message-consumer-app
server.port=8081

#RabbitMQ configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#point to the same exchange that to the producer
spring.cloud.stream.bindings.original-message.destination=orgmsg-exchange
spring.cloud.stream.bindings.transformed-messages.destination=convertedMsgSource
spring.cloud.stream.bindings.alert-message-queue.destination=alert-exchange




spring.cloud.stream.bindings.original-message.contentType=application/json
spring.cloud.stream.bindings.transformed-messages.contentType=application/json
spring.cloud.stream.bindings.alert-message-queue.contentType=application/json

#declare same exchange-type
spring.cloud.stream.rabbit.bindings.original-message.consumer.exchangeType=topic
spring.cloud.stream.rabbit.bindings.transformed-messages.consumer.exchangeType=topic
spring.cloud.stream.rabbit.bindings.alert-message-queue.consumer.exchangeType=direct


#queue group
spring.cloud.stream.bindings.original-message.group=orgmsg-queue-test
#spring.cloud.stream.bindings.transformed-messages.group=orgmsg-queue-test


#bind same routing key that to the producer
spring.cloud.stream.rabbit.bindings.original-message.consumer.bindingRoutingKey=#
#spring.cloud.stream.rabbit.bindings.transformed-messages.producer.routingKeyExpression=#

spring.cloud.stream.rabbit.bindings.original-message.consumer.bindQueue=false

spring.cloud.stream.rabbit.bindings.original-message.consumer.declareExchange=false

spring.cloud.stream.rabbit.bindings.original-message.consumer.queueNameGroupOnly=true